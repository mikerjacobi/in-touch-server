// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/mikerjacobi/in-touch-server/design
// --out=$(GOPATH)/src/github.com/mikerjacobi/in-touch-server
// --version=v1.1.0-dirty
//
// API "adder": friend Resource Client
//
// The content of this file is auto-generated, DO NOT MODIFY

package client

import (
	"fmt"
	"golang.org/x/net/context"
	"net/http"
	"net/url"
)

// GetFriendPath computes a request path to the get action of friend.
func GetFriendPath(friendID string) string {
	param0 := friendID

	return fmt.Sprintf("/friend/%s", param0)
}

// get friend by id
func (c *Client) GetFriend(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewGetFriendRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewGetFriendRequest create the request corresponding to the get action endpoint of the friend resource.
func (c *Client) NewGetFriendRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
